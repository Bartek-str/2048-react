{"version":3,"sources":["components/Home/Icon/Icon.js","components/Home/Icon/index.js","components/Home/Text/Text.js","components/Home/Text/index.js","components/Home/Cell/index.js","components/Home/Cell/Cell.js","components/Home/Row/index.js","components/Home/Row/Row.js","components/Home/index.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Icon","className","Text","Cell","cellValue","color","value","Row","row","map","cell","i","key","Home","props","state","board","score","gameOver","bestScore","howToPlay","this","placeRandom","setState","blankCoordinates","getBlankCoordinates","randomCoordinate","Math","floor","random","length","randomStartingNumber","r","c","push","startingNumbers","initBoard","document","addEventListener","handleOnPress","bind","e","keyCode","move","original","updated","JSON","stringify","direction","movedUp","upWithRandom","movedRight","rightWithRandom","movedDown","downWithRandom","movedLeft","leftWithRandom","moveUp","boardMoved","checkForGameOver","moveRight","moveDown","moveLeft","inputBoard","rotatedRight","rotateRight","current","unshift","rotateLeft","matrix","result","includes","id","onClick","Component","App","exact","path","component","Boolean","window","location","hostname","match","root","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9e006d89.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Icon() {\n    return (\n        <div className=\"Icon\">\n            2048\n        </div>\n    );\n}\n\nexport default Icon;","import Icon from \"./Icon\";\n\nexport default Icon;","import React from \"react\";\n\nfunction Text() {\n    return (\n        <div className=\"text\">\n            Your next goal is to get to the <span>2048 tile!</span>\n        </div>\n    );\n}\n\nexport default Text;","import Text from \"./Text\";\n\nexport default Text;","import Cell from \"./Cell\";\n\nexport default Cell;","import React from \"react\";\n\nconst Cell = ({ cellValue }) => {\n    let color = 'cell';\n    let value = (cellValue === 0) ? '' : cellValue;\n    if (value) {\n        color += ` color-${value}`;\n    }\n\n    return (\n        <td>\n            <div className={color}>\n                <div className=\"number\">{value}</div>\n            </div>\n        </td>\n    );\n};\n\nexport default Cell;","import Row from \"./Row\";\n\nexport default Row;","import React from \"react\";\nimport Cell from \"../Cell\";\n\nconst Row = ({ row }) => {\n    return (\n        <tr className='row'>\n            {row.map((cell, i) => (<Cell key={i} cellValue={cell} />))}\n        </tr>\n    );\n};\n\nexport default Row;","import Home from \"./Home\";\n\nexport default Home;","import React, { Component } from \"react\";\nimport Icon from \"./Icon\";\nimport Text from \"./Text\";\nimport Row from \"./Row\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            board: [],\n            score: 0,\n            gameOver: false,\n            bestScore: 0,\n            howToPlay: false\n        };\n    }\n\n    initBoard() {\n        let board = [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];\n        board = this.placeRandom(this.placeRandom(board));\n        this.setState({board, score: 0, gameOver: false});\n    }\n\n    placeRandom(board) {\n        const blankCoordinates = this.getBlankCoordinates(board);\n        const randomCoordinate = blankCoordinates[Math.floor(Math.random() * blankCoordinates.length)];\n        board[randomCoordinate[0]][randomCoordinate[1]] = this.randomStartingNumber();\n        return board;\n    }\n\n    getBlankCoordinates(board) {\n        const blankCoordinates = [];\n\n        for (let r = 0; r < board.length; r++) {\n            for (let c = 0; c < board[r].length; c++) {\n                if (board[r][c] === 0) {blankCoordinates.push([r, c])}\n            }\n        }\n\n        return blankCoordinates;\n    }\n\n    randomStartingNumber() {\n        const startingNumbers = [2,4];\n        return startingNumbers[Math.floor(Math.random() * startingNumbers.length)];\n    }\n\n    componentWillMount() {\n        this.initBoard();\n        document.addEventListener('keydown', this.handleOnPress.bind(this))\n    }\n\n    handleOnPress(e) {\n        if (e.keyCode === 38) {this.move('up');}\n        if (e.keyCode === 39) {this.move('right');}\n        if (e.keyCode === 40) {this.move('down');}\n        if (e.keyCode === 37) {this.move('left');}\n    }\n\n    boardMoved(original, updated) {\n        return (JSON.stringify(updated) !== JSON.stringify(original));\n    }\n\n    move(direction) {\n        let movedUp;\n        let upWithRandom;\n        let movedRight;\n        let rightWithRandom;\n        let movedDown;\n        let downWithRandom;\n        let movedLeft;\n        let leftWithRandom;\n        if (!this.state.gameOver) {\n            if (direction === 'up') {\n                movedUp = this.moveUp(this.state.board);\n                if (this.boardMoved(this.state.board, movedUp.board)) {\n                    upWithRandom = this.placeRandom(movedUp.board);\n                    if (this.checkForGameOver(upWithRandom)) {this.setState({board: upWithRandom, gameOver: true});} // eslint-disable-next-line\n                    else {this.setState({board: upWithRandom, score: this.state.score += movedUp.score});}\n                }\n            }\n            if (direction === 'right') {\n                movedRight = this.moveRight(this.state.board);\n                if (this.boardMoved(this.state.board, movedRight.board)) {\n                    rightWithRandom = this.placeRandom(movedRight.board);\n                    if (this.checkForGameOver(rightWithRandom)) {this.setState({board: rightWithRandom, gameOver: true});} // eslint-disable-next-line\n                    else {this.setState({board: rightWithRandom, score: this.state.score += movedRight.score});}\n                }\n            }\n            if (direction === 'down') {\n                movedDown = this.moveDown(this.state.board);\n                if (this.boardMoved(this.state.board, movedDown.board)) {\n                    downWithRandom = this.placeRandom(movedDown.board);\n                    if (this.checkForGameOver(downWithRandom)) {this.setState({board: downWithRandom, gameOver: true});} // eslint-disable-next-line\n                    else {this.setState({board: downWithRandom, score: this.state.score += movedDown.score});}\n                }\n            }\n            if (direction === 'left') {\n                movedLeft = this.moveLeft(this.state.board);\n                if (this.boardMoved(this.state.board, movedLeft.board)) {\n                    leftWithRandom = this.placeRandom(movedLeft.board);\n                    if (this.checkForGameOver(leftWithRandom)) {this.setState({board: leftWithRandom, gameOver: true});} // eslint-disable-next-line\n                    else {this.setState({board: leftWithRandom, score: this.state.score += movedLeft.score});}\n                }\n            }\n        }\n    }\n\n    moveUp(inputBoard) {\n        let rotatedRight = this.rotateRight(inputBoard);\n        let board = [];\n        let score = 0;\n\n        for (let r = 0; r < rotatedRight.length; r++) {\n            let row = [];\n            for (let c = 0; c < rotatedRight[r].length; c++) {\n                let current = rotatedRight[r][c];\n                (current === 0) ? row.unshift(current) : row.push(current);\n            }\n            board.push(row);\n        }\n\n        for (let r = 0; r < board.length; r++) {\n            for (let c = board[r].length - 1; c >= 0; c--) {\n                if (board[r][c] > 0 && board[r][c] === board[r][c - 1]) {\n                    board[r][c] = board[r][c] * 2;\n                    board[r][c - 1] = 0;\n                    score += board[r][c];\n                }\n                else if (board[r][c] === 0 && board[r][c - 1] > 0) {\n                    board[r][c] = board[r][c - 1];\n                    board[r][c - 1] = 0;\n                }\n            }\n        }\n        board = this.rotateLeft(board);\n        return {board, score};\n    }\n\n    moveRight(inputBoard) {\n        let board = [];\n        let score = 0;\n\n        for (let r = 0; r < inputBoard.length; r++) {\n            let row = [];\n            for (let c = 0; c < inputBoard[r].length; c++) {\n                let current = inputBoard[r][c];\n                (current === 0) ? row.unshift(current) : row.push(current);\n            }\n            board.push(row);\n        }\n\n        for (let r = 0; r < board.length; r++) {\n            for (let c = board[r].length - 1; c >= 0; c--) {\n                if (board[r][c] > 0 && board[r][c] === board[r][c - 1]) {\n                    board[r][c] = board[r][c] * 2;\n                    board[r][c - 1] = 0;\n                    score += board[r][c];\n                }\n                else if (board[r][c] === 0 && board[r][c - 1] > 0) {\n                    board[r][c] = board[r][c - 1];\n                    board[r][c - 1] = 0;\n                }\n            }\n        }\n        return {board, score};\n    }\n\n    moveDown(inputBoard) {\n        let rotatedRight = this.rotateRight(inputBoard);\n        let board = [];\n        let score = 0;\n\n        for (let r = 0; r < rotatedRight.length; r++) {\n            let row = [];\n            for (let c = rotatedRight[r].length - 1; c >= 0; c--) {\n                let current = rotatedRight[r][c];\n                (current === 0) ? row.push(current) : row.unshift(current);\n            }\n            board.push(row);\n        }\n\n        for (let r = 0; r < board.length; r++) {\n            for (let c = 0; c < board.length; c++) {\n                if (board[r][c] > 0 && board[r][c] === board[r][c + 1]) {\n                    board[r][c] = board[r][c] * 2;\n                    board[r][c + 1] = 0;\n                    score += board[r][c];\n                }\n                else if (board[r][c] === 0 && board[r][c + 1] > 0) {\n                    board[r][c] = board[r][c + 1];\n                    board[r][c + 1] = 0;\n                }\n            }\n        }\n\n        board = this.rotateLeft(board);\n        return {board, score};\n    }\n\n    moveLeft(inputBoard) {\n        let board = [];\n        let score = 0;\n\n        for (let r = 0; r < inputBoard.length; r++) {\n            let row = [];\n            for (let c = inputBoard[r].length - 1; c >= 0; c--) {\n                let current = inputBoard[r][c];\n                (current === 0) ? row.push(current) : row.unshift(current);\n            }\n            board.push(row);\n        }\n\n        for (let r = 0; r < board.length; r++) {\n            for (let c = 0; c < board.length; c++) {\n                if (board[r][c] > 0 && board[r][c] === board[r][c + 1]) {\n                    board[r][c] = board[r][c] * 2;\n                    board[r][c + 1] = 0;\n                    score += board[r][c];\n                }\n                else if (board[r][c] === 0 && board[r][c + 1] > 0) {\n                    board[r][c] = board[r][c + 1];\n                    board[r][c + 1] = 0;\n                }\n            }\n        }\n        return {board, score};\n    }\n\n    rotateRight(matrix) {\n        let result = [];\n\n        for (let c = 0; c < matrix.length; c++) {\n            let row = [];\n            for (let r = matrix.length - 1; r >= 0; r--) {\n                row.push(matrix[r][c]);\n            }\n            result.push(row);\n        }\n        return result;\n    }\n\n    rotateLeft(matrix) {\n        let result = [];\n\n        for (let c = matrix.length - 1; c >= 0; c--) {\n            let row = [];\n            for (let r = matrix.length - 1; r >= 0; r--) {\n                row.unshift(matrix[r][c]);\n            }\n            result.push(row);\n        }\n\n        return result;\n    }\n\n    checkForGameOver(board) {\n        let moves = [\n            this.boardMoved(board, this.moveUp(board).board),\n            this.boardMoved(board, this.moveRight(board).board),\n            this.boardMoved(board, this.moveDown(board).board),\n            this.boardMoved(board, this.moveLeft(board).board)\n        ];\n\n        return (!moves.includes(true));\n    }\n\n    componentDidUpdate() {\n        if (this.state.score > this.state.bestScore) {\n            this.setState({bestScore: this.state.score})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"Top\">\n                    <div className=\"upper\">\n                        <Icon />\n                        <div className=\"ScoreBar\">\n                            <div className=\"Score\">\n                                <div className=\"scoreTitle\" id='title1'>Score</div>\n                                <div className=\"scorePoints\">{this.state.score}</div>\n                            </div>\n                            <div className=\"BestScore\">\n                                <div className=\"bestScoreTitle\" id='title2'>Best</div>\n                                <div className=\"bestScorePoints\">{this.state.bestScore}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"lower\">\n                        <Text />\n                        <div className=\"newGame\" onClick={() => (this.initBoard())}>New Game</div>\n                    </div>\n                </div>\n                <div className=\"GameContainer\">\n                    <table>\n                        {this.state.board.map((row, i) => (<Row key={i} row={row} />))}\n                    </table>\n                </div>\n                {this.state.gameOver === true ? <div className=\"gameOver\"><div>Game over</div><button onClick={() => (this.initBoard())}>New Game</button></div> : ``}\n                <div className='howToPlay' onClick={() => (this.setState({howToPlay: !this.state.howToPlay}))}>{!this.state.howToPlay ? \"How to play\" : \"Hide\"}</div>\n                {!this.state.howToPlay ? '' : <div className='instruction'>Use your <span>arrow keys</span> to move the tiles. When two tiles with the same number touch, they <span>merge into one!</span></div>}\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Home from \"./components/Home\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route exact path='/' component={ Home } />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}